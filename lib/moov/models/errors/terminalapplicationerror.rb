# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Errors
    

      class TerminalApplicationError
        extend T::Sig
        include Crystalline::MetadataFields


        field :platform, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('platform') } }

        field :app_bundle_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('appBundleID') } }

        field :package_name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('packageName') } }

        field :sha256_digest, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('sha256Digest') } }

        field :version_code, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('versionCode') } }
        # Raw HTTP response; suitable for custom response parsing
        field :raw_response, Crystalline::Nilable.new(::Faraday::Response), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('-') } }

        sig { params(platform: T.nilable(::String), app_bundle_id: T.nilable(::String), package_name: T.nilable(::String), sha256_digest: T.nilable(::String), version_code: T.nilable(::String), raw_response: T.nilable(::Faraday::Response)).void }
        def initialize(platform: nil, app_bundle_id: nil, package_name: nil, sha256_digest: nil, version_code: nil, raw_response: nil)
          @platform = platform
          @app_bundle_id = app_bundle_id
          @package_name = package_name
          @sha256_digest = sha256_digest
          @version_code = version_code
          @raw_response = raw_response
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @platform == other.platform
          return false unless @app_bundle_id == other.app_bundle_id
          return false unless @package_name == other.package_name
          return false unless @sha256_digest == other.sha256_digest
          return false unless @version_code == other.version_code
          return false unless @raw_response == other.raw_response
          true
        end
      end
    end
  end
end
