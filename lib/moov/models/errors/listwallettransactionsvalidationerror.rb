# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Errors
    

      class ListWalletTransactionsValidationError < StandardError
        extend T::Sig
        include Crystalline::MetadataFields


        field :transaction_type, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('transactionType') } }

        field :transaction_types, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('transactionTypes') } }

        field :source_type, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('sourceType') } }

        field :source_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('sourceID') } }

        field :status, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('status') } }

        field :sweep_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('sweepID') } }

        field :created_start_date_time, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('createdStartDateTime') } }

        field :created_end_date_time, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('createdEndDateTime') } }

        field :completed_start_date_time, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('completedStartDateTime') } }

        field :completed_end_date_time, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('completedEndDateTime') } }

        field :statement_descriptor, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('statementDescriptor') } }

        field :skip, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('skip') } }

        field :count, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('count') } }
        # Raw HTTP response; suitable for custom response parsing
        field :raw_response, Crystalline::Nilable.new(::Faraday::Response), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('-') } }

        sig { params(transaction_type: T.nilable(::String), transaction_types: T.nilable(::String), source_type: T.nilable(::String), source_id: T.nilable(::String), status: T.nilable(::String), sweep_id: T.nilable(::String), created_start_date_time: T.nilable(::String), created_end_date_time: T.nilable(::String), completed_start_date_time: T.nilable(::String), completed_end_date_time: T.nilable(::String), statement_descriptor: T.nilable(::String), skip: T.nilable(::String), count: T.nilable(::String), raw_response: T.nilable(::Faraday::Response)).void }
        def initialize(transaction_type: nil, transaction_types: nil, source_type: nil, source_id: nil, status: nil, sweep_id: nil, created_start_date_time: nil, created_end_date_time: nil, completed_start_date_time: nil, completed_end_date_time: nil, statement_descriptor: nil, skip: nil, count: nil, raw_response: nil)
          @transaction_type = transaction_type
          @transaction_types = transaction_types
          @source_type = source_type
          @source_id = source_id
          @status = status
          @sweep_id = sweep_id
          @created_start_date_time = created_start_date_time
          @created_end_date_time = created_end_date_time
          @completed_start_date_time = completed_start_date_time
          @completed_end_date_time = completed_end_date_time
          @statement_descriptor = statement_descriptor
          @skip = skip
          @count = count
          @raw_response = raw_response
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @transaction_type == other.transaction_type
          return false unless @transaction_types == other.transaction_types
          return false unless @source_type == other.source_type
          return false unless @source_id == other.source_id
          return false unless @status == other.status
          return false unless @sweep_id == other.sweep_id
          return false unless @created_start_date_time == other.created_start_date_time
          return false unless @created_end_date_time == other.created_end_date_time
          return false unless @completed_start_date_time == other.completed_start_date_time
          return false unless @completed_end_date_time == other.completed_end_date_time
          return false unless @statement_descriptor == other.statement_descriptor
          return false unless @skip == other.skip
          return false unless @count == other.count
          return false unless @raw_response == other.raw_response
          true
        end
      end
    end
  end
end
