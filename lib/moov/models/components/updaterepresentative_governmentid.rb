# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class UpdateRepresentativeGovernmentID
        extend T::Sig
        include Crystalline::MetadataFields


        field :ssn, Crystalline::Nilable.new(Models::Components::UpdateRepresentativeSsn), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('ssn') } }

        field :itin, Crystalline::Nilable.new(Models::Components::UpdateRepresentativeItin), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('itin') } }

        sig { params(ssn: T.nilable(Models::Components::UpdateRepresentativeSsn), itin: T.nilable(Models::Components::UpdateRepresentativeItin)).void }
        def initialize(ssn: nil, itin: nil)
          @ssn = ssn
          @itin = itin
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @ssn == other.ssn
          return false unless @itin == other.itin
          true
        end
      end
    end
  end
end
