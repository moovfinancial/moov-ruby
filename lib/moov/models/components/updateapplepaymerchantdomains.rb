# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class UpdateApplePayMerchantDomains
        extend T::Sig
        include Crystalline::MetadataFields

        # A unique list of fully-qualified, top-level or sub-domain names to add.
        field :add_domains, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('addDomains') } }
        # A unique list of fully-qualified, top-level or sub-domain names to remove.
        field :remove_domains, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('removeDomains') } }

        sig { params(add_domains: T.nilable(T::Array[::String]), remove_domains: T.nilable(T::Array[::String])).void }
        def initialize(add_domains: nil, remove_domains: nil)
          @add_domains = add_domains
          @remove_domains = remove_domains
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @add_domains == other.add_domains
          return false unless @remove_domains == other.remove_domains
          true
        end
      end
    end
  end
end
