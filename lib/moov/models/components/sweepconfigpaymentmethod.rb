# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # The payment method used to push or pull funds to a bank account.
      # The push payment method can only be ach-credit-standard, ach-credit-same-day, or rtp-credit. The pull payment method can only be ach-debit-fund.
      class SweepConfigPaymentMethod
        extend T::Sig
        include Crystalline::MetadataFields

        # ID of the payment method.
        field :payment_method_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('paymentMethodID'), required: true } }

        field :disabled_on, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('disabledOn'), 'decoder': Utils.datetime_from_iso_format(true) } }

        sig { params(payment_method_id: ::String, disabled_on: T.nilable(::DateTime)).void }
        def initialize(payment_method_id:, disabled_on: nil)
          @payment_method_id = payment_method_id
          @disabled_on = disabled_on
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @payment_method_id == other.payment_method_id
          return false unless @disabled_on == other.disabled_on
          true
        end
      end
    end
  end
end
