# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class UpdateCardAddress
        extend T::Sig
        include Crystalline::MetadataFields


        field :address_line1, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('addressLine1') } }

        field :address_line2, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('addressLine2') } }

        field :city, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('city') } }

        field :state_or_province, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('stateOrProvince') } }

        field :postal_code, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('postalCode') } }

        field :country, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('country') } }

        sig { params(address_line1: T.nilable(::String), address_line2: T.nilable(::String), city: T.nilable(::String), state_or_province: T.nilable(::String), postal_code: T.nilable(::String), country: T.nilable(::String)).void }
        def initialize(address_line1: nil, address_line2: nil, city: nil, state_or_province: nil, postal_code: nil, country: nil)
          @address_line1 = address_line1
          @address_line2 = address_line2
          @city = city
          @state_or_province = state_or_province
          @postal_code = postal_code
          @country = country
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @address_line1 == other.address_line1
          return false unless @address_line2 == other.address_line2
          return false unless @city == other.city
          return false unless @state_or_province == other.state_or_province
          return false unless @postal_code == other.postal_code
          return false unless @country == other.country
          true
        end
      end
    end
  end
end
