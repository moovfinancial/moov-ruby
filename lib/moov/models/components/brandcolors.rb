# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Brand colors for light and dark modes.
      class BrandColors
        extend T::Sig
        include Crystalline::MetadataFields


        field :dark, Models::Components::BrandColor, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('dark'), required: true } }

        field :light, Models::Components::BrandColor, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('light'), required: true } }

        sig { params(dark: Models::Components::BrandColor, light: Models::Components::BrandColor).void }
        def initialize(dark:, light:)
          @dark = dark
          @light = light
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @dark == other.dark
          return false unless @light == other.light
          true
        end
      end
    end
  end
end
