# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class WebhookDataRepresentativeUpdated
        extend T::Sig
        include Crystalline::MetadataFields


        field :account_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('accountID'), required: true } }

        field :representative_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('representativeID'), required: true } }

        sig { params(account_id: ::String, representative_id: ::String).void }
        def initialize(account_id:, representative_id:)
          @account_id = account_id
          @representative_id = representative_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @account_id == other.account_id
          return false unless @representative_id == other.representative_id
          true
        end
      end
    end
  end
end
