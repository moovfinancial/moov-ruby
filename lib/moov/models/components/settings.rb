# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # User provided settings to manage an account.
      class Settings
        extend T::Sig
        include Crystalline::MetadataFields

        # User provided settings to manage card payments. This data is only allowed on a business account.
        field :card_payment, Crystalline::Nilable.new(Models::Components::CardPaymentSettings), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('cardPayment') } }

        field :ach_payment, Crystalline::Nilable.new(Models::Components::ACHPaymentSettings), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('achPayment') } }

        sig { params(card_payment: T.nilable(Models::Components::CardPaymentSettings), ach_payment: T.nilable(Models::Components::ACHPaymentSettings)).void }
        def initialize(card_payment: nil, ach_payment: nil)
          @card_payment = card_payment
          @ach_payment = ach_payment
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @card_payment == other.card_payment
          return false unless @ach_payment == other.ach_payment
          true
        end
      end
    end
  end
end
