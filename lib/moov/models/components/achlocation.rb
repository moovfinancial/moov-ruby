# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class AchLocation
        extend T::Sig
        include Crystalline::MetadataFields


        field :address, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('address'), required: true } }

        field :city, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('city'), required: true } }

        field :postal_code, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('postalCode'), required: true } }

        field :postal_code_extension, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('postalCodeExtension'), required: true } }

        field :state, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('state'), required: true } }

        sig { params(address: ::String, city: ::String, postal_code: ::String, postal_code_extension: ::String, state: ::String).void }
        def initialize(address:, city:, postal_code:, postal_code_extension:, state:)
          @address = address
          @city = city
          @postal_code = postal_code
          @postal_code_extension = postal_code_extension
          @state = state
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @address == other.address
          return false unless @city == other.city
          return false unless @postal_code == other.postal_code
          return false unless @postal_code_extension == other.postal_code_extension
          return false unless @state == other.state
          true
        end
      end
    end
  end
end
