# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class FulfillmentDetailsError
        extend T::Sig
        include Crystalline::MetadataFields


        field :shipment_duration_days, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('shipmentDurationDays') } }

        field :return_policy, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('returnPolicy') } }

        sig { params(shipment_duration_days: T.nilable(::String), return_policy: T.nilable(::String)).void }
        def initialize(shipment_duration_days: nil, return_policy: nil)
          @shipment_duration_days = shipment_duration_days
          @return_policy = return_policy
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @shipment_duration_days == other.shipment_duration_days
          return false unless @return_policy == other.return_policy
          true
        end
      end
    end
  end
end
