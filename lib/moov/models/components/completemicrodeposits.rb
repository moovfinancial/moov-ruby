# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Request to complete the micro-deposit verification workflow.
      class CompleteMicroDeposits
        extend T::Sig
        include Crystalline::MetadataFields

        # Two positive integers, in cents, equal to the values of the micro-deposits sent to the bank account.
        field :amounts, Crystalline::Array.new(::Integer), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('amounts'), required: true } }

        sig { params(amounts: T::Array[::Integer]).void }
        def initialize(amounts:)
          @amounts = amounts
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @amounts == other.amounts
          true
        end
      end
    end
  end
end
