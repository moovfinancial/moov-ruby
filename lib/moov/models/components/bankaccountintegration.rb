# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class BankAccountIntegration
        extend T::Sig
        include Crystalline::MetadataFields


        field :holder_name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('holderName'), required: true } }
        # The type of holder on a funding source.
        field :holder_type, Models::Components::BankAccountHolderType, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('holderType'), required: true, 'decoder': Utils.enum_from_string(Models::Components::BankAccountHolderType, false) } }

        field :account_number, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('accountNumber'), required: true } }
        # The bank account type.
        field :bank_account_type, Models::Components::BankAccountType, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('bankAccountType'), required: true, 'decoder': Utils.enum_from_string(Models::Components::BankAccountType, false) } }

        field :routing_number, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('routingNumber'), required: true } }

        sig { params(holder_name: ::String, holder_type: Models::Components::BankAccountHolderType, account_number: ::String, bank_account_type: Models::Components::BankAccountType, routing_number: ::String).void }
        def initialize(holder_name:, holder_type:, account_number:, bank_account_type:, routing_number:)
          @holder_name = holder_name
          @holder_type = holder_type
          @account_number = account_number
          @bank_account_type = bank_account_type
          @routing_number = routing_number
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @holder_name == other.holder_name
          return false unless @holder_type == other.holder_type
          return false unless @account_number == other.account_number
          return false unless @bank_account_type == other.bank_account_type
          return false unless @routing_number == other.routing_number
          true
        end
      end
    end
  end
end
