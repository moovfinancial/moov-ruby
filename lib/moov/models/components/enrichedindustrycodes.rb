# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class EnrichedIndustryCodes
        extend T::Sig
        include Crystalline::MetadataFields


        field :naics, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('naics') } }

        field :sic, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('sic') } }

        sig { params(naics: T.nilable(::String), sic: T.nilable(::String)).void }
        def initialize(naics: nil, sic: nil)
          @naics = naics
          @sic = sic
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @naics == other.naics
          return false unless @sic == other.sic
          true
        end
      end
    end
  end
end
