# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class AmountValidationError
        extend T::Sig
        include Crystalline::MetadataFields


        field :currency, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('currency') } }

        field :value, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('value') } }

        sig { params(currency: T.nilable(::String), value: T.nilable(::String)).void }
        def initialize(currency: nil, value: nil)
          @currency = currency
          @value = value
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @currency == other.currency
          return false unless @value == other.value
          true
        end
      end
    end
  end
end
