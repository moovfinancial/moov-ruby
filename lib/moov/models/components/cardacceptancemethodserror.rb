# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class CardAcceptanceMethodsError
        extend T::Sig
        include Crystalline::MetadataFields


        field :in_person_percentage, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('inPersonPercentage') } }

        field :mail_or_phone_percentage, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('mailOrPhonePercentage') } }

        field :online_percentage, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('onlinePercentage') } }

        sig { params(in_person_percentage: T.nilable(::String), mail_or_phone_percentage: T.nilable(::String), online_percentage: T.nilable(::String)).void }
        def initialize(in_person_percentage: nil, mail_or_phone_percentage: nil, online_percentage: nil)
          @in_person_percentage = in_person_percentage
          @mail_or_phone_percentage = mail_or_phone_percentage
          @online_percentage = online_percentage
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @in_person_percentage == other.in_person_percentage
          return false unless @mail_or_phone_percentage == other.mail_or_phone_percentage
          return false unless @online_percentage == other.online_percentage
          true
        end
      end
    end
  end
end
