# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class Fulfillment
        extend T::Sig
        include Crystalline::MetadataFields


        field :method, Crystalline::Nilable.new(Models::Components::FulfillmentMethod), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('method'), 'decoder': Utils.enum_from_string(Models::Components::FulfillmentMethod, true) } }

        field :timeframe, Crystalline::Nilable.new(Models::Components::FulfillmentTimeframe), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('timeframe'), 'decoder': Utils.enum_from_string(Models::Components::FulfillmentTimeframe, true) } }

        sig { params(method: T.nilable(Models::Components::FulfillmentMethod), timeframe: T.nilable(Models::Components::FulfillmentTimeframe)).void }
        def initialize(method: nil, timeframe: nil)
          @method = method
          @timeframe = timeframe
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @method == other.method
          return false unless @timeframe == other.timeframe
          true
        end
      end
    end
  end
end
