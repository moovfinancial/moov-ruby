# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Array of fee IDs to fetch.
      class ListFeesFetchRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :fee_i_ds, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('feeIDs') } }

        sig { params(fee_i_ds: T.nilable(T::Array[::String])).void }
        def initialize(fee_i_ds: nil)
          @fee_i_ds = fee_i_ds
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @fee_i_ds == other.fee_i_ds
          true
        end
      end
    end
  end
end
