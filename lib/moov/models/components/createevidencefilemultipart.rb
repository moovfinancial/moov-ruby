# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class CreateEvidenceFileMultiPart
        extend T::Sig
        include Crystalline::MetadataFields

        # The file to upload as evidence. Valid types are [jpeg, tiff, pdf] with a limit of 4MB per file.
        # 
        # The `Content-Type` header for this form part must be one of the following:
        #   - `image/jpeg`
        #   - `image/tiff`
        #   - `application/pdf`
        field :file, Models::Components::CreateEvidenceFileMultiPartFile, { 'multipart_form': { 'file': true, 'field_name': 'file' } }

        field :evidence_type, Models::Components::EvidenceType, { 'multipart_form': { 'field_name': 'evidenceType' } }

        sig { params(file: Models::Components::CreateEvidenceFileMultiPartFile, evidence_type: Models::Components::EvidenceType).void }
        def initialize(file:, evidence_type:)
          @file = file
          @evidence_type = evidence_type
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @file == other.file
          return false unless @evidence_type == other.evidence_type
          true
        end
      end
    end
  end
end
