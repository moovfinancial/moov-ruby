# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Occurrences to either create or modify.
      class Occurrence
        extend T::Sig
        include Crystalline::MetadataFields

        # If set to true, will cancel the occurrence. If set false will resume the occurrence. If unset leaves the value unchanged.
        field :canceled, Crystalline::Nilable.new(Crystalline::Boolean.new), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('canceled') } }
        #   If set this defines what occurrence to modify, if invalid will fail the request. 
        #   If null or "" it defines to add a new occurrence.
        field :occurrence_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('occurrenceID') } }
        # Timestamp to run the transfer after. Value must be into the future.
        field :run_on, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('runOn'), 'decoder': Utils.datetime_from_iso_format(true) } }
        # Defines the attributes of a transfer.
        field :run_transfer, Crystalline::Nilable.new(Models::Components::RunTransfer), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('runTransfer') } }

        sig { params(canceled: T.nilable(T::Boolean), occurrence_id: T.nilable(::String), run_on: T.nilable(::DateTime), run_transfer: T.nilable(Models::Components::RunTransfer)).void }
        def initialize(canceled: nil, occurrence_id: nil, run_on: nil, run_transfer: nil)
          @canceled = canceled
          @occurrence_id = occurrence_id
          @run_on = run_on
          @run_transfer = run_transfer
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @canceled == other.canceled
          return false unless @occurrence_id == other.occurrence_id
          return false unless @run_on == other.run_on
          return false unless @run_transfer == other.run_transfer
          true
        end
      end
    end
  end
end
