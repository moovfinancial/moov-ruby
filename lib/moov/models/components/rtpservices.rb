# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class RTPServices
        extend T::Sig
        include Crystalline::MetadataFields

        # Can the institution receive payments
        field :receive_payments, Crystalline::Boolean.new, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('receivePayments'), required: true } }
        # Can the institution receive request for payment messages
        field :receive_request_for_payment, Crystalline::Boolean.new, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('receiveRequestForPayment'), required: true } }

        sig { params(receive_payments: T::Boolean, receive_request_for_payment: T::Boolean).void }
        def initialize(receive_payments:, receive_request_for_payment:)
          @receive_payments = receive_payments
          @receive_request_for_payment = receive_request_for_payment
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @receive_payments == other.receive_payments
          return false unless @receive_request_for_payment == other.receive_request_for_payment
          true
        end
      end
    end
  end
end
