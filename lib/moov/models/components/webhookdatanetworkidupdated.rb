# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class WebhookDataNetworkIDUpdated
        extend T::Sig
        include Crystalline::MetadataFields


        field :account_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('accountID'), required: true } }

        field :visa_mid, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('visaMid') } }

        field :mastercard_mid, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('mastercardMid') } }

        field :discover_mid, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('discoverMid') } }

        field :amex_mid, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('amexMid') } }

        field :updated_on, Crystalline::Nilable.new(::DateTime), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('updatedOn'), 'decoder': Utils.datetime_from_iso_format(true) } }

        sig { params(account_id: ::String, visa_mid: T.nilable(::String), mastercard_mid: T.nilable(::String), discover_mid: T.nilable(::String), amex_mid: T.nilable(::String), updated_on: T.nilable(::DateTime)).void }
        def initialize(account_id:, visa_mid: nil, mastercard_mid: nil, discover_mid: nil, amex_mid: nil, updated_on: nil)
          @account_id = account_id
          @visa_mid = visa_mid
          @mastercard_mid = mastercard_mid
          @discover_mid = discover_mid
          @amex_mid = amex_mid
          @updated_on = updated_on
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @account_id == other.account_id
          return false unless @visa_mid == other.visa_mid
          return false unless @mastercard_mid == other.mastercard_mid
          return false unless @discover_mid == other.discover_mid
          return false unless @amex_mid == other.amex_mid
          return false unless @updated_on == other.updated_on
          true
        end
      end
    end
  end
end
