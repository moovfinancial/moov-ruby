# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Multipart request body for updating an image and/or its metadata.
      class ImageUpdateRequestMultiPart
        extend T::Sig
        include Crystalline::MetadataFields


        field :image, Models::Components::ImageUpdateRequestMultiPartImage, { 'multipart_form': { 'file': true, 'field_name': 'image' } }
        # JSON-encoded metadata to update for the image.
        # 
        # Omit this field if not updating metadata, or send `null` to clear existing metadata.
        field :metadata, Crystalline::Nilable.new(Models::Components::Metadata), { 'multipart_form': { 'field_name': 'metadata', 'json': true } }

        sig { params(image: Models::Components::ImageUpdateRequestMultiPartImage, metadata: T.nilable(Models::Components::Metadata)).void }
        def initialize(image:, metadata: nil)
          @image = image
          @metadata = metadata
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @image == other.image
          return false unless @metadata == other.metadata
          true
        end
      end
    end
  end
end
