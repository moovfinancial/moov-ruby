# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # An adjustment to a wallet.
      class Adjustment
        extend T::Sig
        include Crystalline::MetadataFields


        field :adjustment_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('adjustmentID'), required: true } }

        field :wallet_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('walletID'), required: true } }

        field :amount, Models::Components::AmountDecimal, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('amount'), required: true } }

        field :created_on, ::DateTime, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('createdOn'), required: true, 'decoder': Utils.datetime_from_iso_format(false) } }

        sig { params(adjustment_id: ::String, wallet_id: ::String, amount: Models::Components::AmountDecimal, created_on: ::DateTime).void }
        def initialize(adjustment_id:, wallet_id:, amount:, created_on:)
          @adjustment_id = adjustment_id
          @wallet_id = wallet_id
          @amount = amount
          @created_on = created_on
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @adjustment_id == other.adjustment_id
          return false unless @wallet_id == other.wallet_id
          return false unless @amount == other.amount
          return false unless @created_on == other.created_on
          true
        end
      end
    end
  end
end
