# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class CollectFundsError
        extend T::Sig
        include Crystalline::MetadataFields


        field :ach, Crystalline::Nilable.new(Models::Components::CollectFundsAchError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('ach') } }

        field :card_payments, Crystalline::Nilable.new(Models::Components::CollectFundsCardPaymentsError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('cardPayments') } }

        sig { params(ach: T.nilable(Models::Components::CollectFundsAchError), card_payments: T.nilable(Models::Components::CollectFundsCardPaymentsError)).void }
        def initialize(ach: nil, card_payments: nil)
          @ach = ach
          @card_payments = card_payments
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @ach == other.ach
          return false unless @card_payments == other.card_payments
          true
        end
      end
    end
  end
end
