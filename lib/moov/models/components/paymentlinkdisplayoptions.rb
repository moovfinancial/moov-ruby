# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Customizable display options for a payment link.
      class PaymentLinkDisplayOptions
        extend T::Sig
        include Crystalline::MetadataFields

        # The payment page title displayed to the user.
        field :title, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('title'), required: true } }
        # A payment description displayed to the user.
        field :description, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('description'), required: true } }
        # The text to be displayed on web form's submit button.
        # 
        # If set to "auto" the UI will automatically select between 
        # "pay" and "confirm" for payments and payouts respectively.
        field :call_to_action, Models::Components::CallToAction, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('callToAction'), required: true, 'decoder': Utils.enum_from_string(Models::Components::CallToAction, false) } }

        sig { params(title: ::String, description: ::String, call_to_action: Models::Components::CallToAction).void }
        def initialize(title:, description:, call_to_action:)
          @title = title
          @description = description
          @call_to_action = call_to_action
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @title == other.title
          return false unless @description == other.description
          return false unless @call_to_action == other.call_to_action
          true
        end
      end
    end
  end
end
