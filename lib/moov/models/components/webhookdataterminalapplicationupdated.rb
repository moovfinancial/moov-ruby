# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class WebhookDataTerminalApplicationUpdated
        extend T::Sig
        include Crystalline::MetadataFields


        field :terminal_application_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('terminalApplicationID'), required: true } }
        # Status of the terminal application.
        field :status, Models::Components::TerminalApplicationStatus, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('status'), required: true, 'decoder': Utils.enum_from_string(Models::Components::TerminalApplicationStatus, false) } }

        sig { params(terminal_application_id: ::String, status: Models::Components::TerminalApplicationStatus).void }
        def initialize(terminal_application_id:, status:)
          @terminal_application_id = terminal_application_id
          @status = status
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @terminal_application_id == other.terminal_application_id
          return false unless @status == other.status
          true
        end
      end
    end
  end
end
