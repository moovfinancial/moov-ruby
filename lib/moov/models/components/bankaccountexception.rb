# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Reason for, and details related to, an `errored` or `verificationFailed` bank account status.
      class BankAccountException
        extend T::Sig
        include Crystalline::MetadataFields

        # Details related to an `errored` or `verificationFailed` bank account status.
        field :description, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('description'), required: true } }
        # The return code of an ACH transaction that caused the bank account status to change.
        # 
        # - R02: Account Closed
        # - R03: No Account/Unable to Locate Account
        # - R04: Invalid Account Number
        # - R05: Improper Debit to Consumer Account
        # - R07: Authorization Revoked by Customer
        # - R08: Payment Stopped
        # - R10: Customer Advises Originator is Not Known or Authorized to Receiver
        # - R11: Customer Advises Entry Not in Accordance with the Terms of the Authorization
        # - R12: Branch Sold to Another DFI
        # - R13: RDFI not qualified to participate
        # - R14: Representative payee deceased or unable to continue in that capacity
        # - R15: Beneficiary or bank account holder
        # - R16: Bank account frozen
        # - R17: Entry with Invalid Account Number Initiated Under Questionable Circumstances
        # - R20: Non-payment bank account
        # - R23: Credit entry refused by receiver
        # - R29: Corporate customer advises not authorized
        # - R34: Limited participation RDFI
        # - R38: Stop Payment on Source Document (Adjustment Entry)
        # - R39: Improper Source Document
        field :ach_return_code, Crystalline::Nilable.new(Models::Components::ACHReturnCode), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('achReturnCode'), 'decoder': Utils.enum_from_string(Models::Components::ACHReturnCode, true) } }
        # The rejection code of an RTP transaction that caused the bank account status to change.
        # 
        # - AC03: Account Invalid
        # - AC04: Account Closed
        # - AC06: Account Blocked
        # - AC14: Creditor Account Type Invalid
        # - AG01: Transactions Forbidden On Account
        # - AG03: Transaction Type Not Supported
        # - MD07: Customer Deceased
        field :rtp_rejection_code, Crystalline::Nilable.new(Models::Components::RTPRejectionCode), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('rtpRejectionCode'), 'decoder': Utils.enum_from_string(Models::Components::RTPRejectionCode, true) } }

        sig { params(description: ::String, ach_return_code: T.nilable(Models::Components::ACHReturnCode), rtp_rejection_code: T.nilable(Models::Components::RTPRejectionCode)).void }
        def initialize(description:, ach_return_code: nil, rtp_rejection_code: nil)
          @description = description
          @ach_return_code = ach_return_code
          @rtp_rejection_code = rtp_rejection_code
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @description == other.description
          return false unless @ach_return_code == other.ach_return_code
          return false unless @rtp_rejection_code == other.rtp_rejection_code
          true
        end
      end
    end
  end
end
