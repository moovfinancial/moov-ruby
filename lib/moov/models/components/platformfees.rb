# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # A detailed breakdown of platform fees.
      class PlatformFees
        extend T::Sig
        include Crystalline::MetadataFields

        # Fees associated with wallet services.
        field :wallet_fee, Models::Components::AmountDecimal, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('walletFee'), required: true } }
        # Fees for PCI compliance.
        field :merchant_pci_fee, Models::Components::AmountDecimal, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('merchantPCIFee'), required: true } }
        # Total platform fees.
        field :total, Models::Components::AmountDecimal, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('total'), required: true } }

        sig { params(wallet_fee: Models::Components::AmountDecimal, merchant_pci_fee: Models::Components::AmountDecimal, total: Models::Components::AmountDecimal).void }
        def initialize(wallet_fee:, merchant_pci_fee:, total:)
          @wallet_fee = wallet_fee
          @merchant_pci_fee = merchant_pci_fee
          @total = total
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @wallet_fee == other.wallet_fee
          return false unless @merchant_pci_fee == other.merchant_pci_fee
          return false unless @total == other.total
          true
        end
      end
    end
  end
end
