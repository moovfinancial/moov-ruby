# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class TransferAccount
        extend T::Sig
        include Crystalline::MetadataFields


        field :account_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('accountID'), required: true } }

        field :email, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('email'), required: true } }

        field :display_name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('displayName'), required: true } }

        sig { params(account_id: ::String, email: ::String, display_name: ::String).void }
        def initialize(account_id:, email:, display_name:)
          @account_id = account_id
          @email = email
          @display_name = display_name
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @account_id == other.account_id
          return false unless @email == other.email
          return false unless @display_name == other.display_name
          true
        end
      end
    end
  end
end
