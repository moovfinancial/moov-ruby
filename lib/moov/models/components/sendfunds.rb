# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class SendFunds
        extend T::Sig
        include Crystalline::MetadataFields


        field :ach, Crystalline::Nilable.new(Models::Components::SendFundsAch), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('ach') } }

        field :push_to_card, Crystalline::Nilable.new(Models::Components::SendFundsPushToCard), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('pushToCard') } }

        field :rtp, Crystalline::Nilable.new(Models::Components::SendFundsRtp), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('rtp') } }

        field :instant_bank, Crystalline::Nilable.new(Models::Components::SendFundsInstantBank), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('instantBank') } }

        sig { params(ach: T.nilable(Models::Components::SendFundsAch), push_to_card: T.nilable(Models::Components::SendFundsPushToCard), rtp: T.nilable(Models::Components::SendFundsRtp), instant_bank: T.nilable(Models::Components::SendFundsInstantBank)).void }
        def initialize(ach: nil, push_to_card: nil, rtp: nil, instant_bank: nil)
          @ach = ach
          @push_to_card = push_to_card
          @rtp = rtp
          @instant_bank = instant_bank
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @ach == other.ach
          return false unless @push_to_card == other.push_to_card
          return false unless @rtp == other.rtp
          return false unless @instant_bank == other.instant_bank
          true
        end
      end
    end
  end
end
