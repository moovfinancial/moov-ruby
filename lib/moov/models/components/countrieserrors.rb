# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class CountriesErrors
        extend T::Sig
        include Crystalline::MetadataFields


        field :countries, Crystalline::Hash.new(Symbol, ::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('countries'), required: true } }

        sig { params(countries: T::Hash[Symbol, ::String]).void }
        def initialize(countries:)
          @countries = countries
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @countries == other.countries
          true
        end
      end
    end
  end
end
