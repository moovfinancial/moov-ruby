# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      #   Provides information about the underlying card.
      # 
      #   Refer to [Apple's documentation](https://developer.apple.com/documentation/apple_pay_on_the_web/applepaypaymenttoken/1916113-paymentmethod) 
      #   for more information.
      class LinkApplePaymentMethod
        extend T::Sig
        include Crystalline::MetadataFields

        # A display-friendly discription of the card.
        field :display_name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('displayName'), required: true } }
        # The card's payment network.
        field :network, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('network'), required: true } }
        # The type of card.
        field :type, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('type'), required: true } }

        sig { params(display_name: ::String, network: ::String, type: ::String).void }
        def initialize(display_name:, network:, type:)
          @display_name = display_name
          @network = network
          @type = type
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @display_name == other.display_name
          return false unless @network == other.network
          return false unless @type == other.type
          true
        end
      end
    end
  end
end
