# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class CreateTransferSourceCard
        extend T::Sig
        include Crystalline::MetadataFields

        # An optional override of the default card statement descriptor for a transfer. Accounts must be enabled by Moov to set this field.
        field :dynamic_descriptor, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('dynamicDescriptor') } }
        # Specifies the nature and initiator of a transaction. 
        # 
        # Crucial for recurring and merchant-initiated transactions as per card scheme rules. 
        # Omit for customer-initiated e-commerce transactions.
        field :transaction_source, Crystalline::Nilable.new(Models::Components::TransactionSource), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('transactionSource'), 'decoder': Utils.enum_from_string(Models::Components::TransactionSource, true) } }

        sig { params(dynamic_descriptor: T.nilable(::String), transaction_source: T.nilable(Models::Components::TransactionSource)).void }
        def initialize(dynamic_descriptor: nil, transaction_source: nil)
          @dynamic_descriptor = dynamic_descriptor
          @transaction_source = transaction_source
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @dynamic_descriptor == other.dynamic_descriptor
          return false unless @transaction_source == other.transaction_source
          true
        end
      end
    end
  end
end
