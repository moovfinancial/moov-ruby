# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class AddCapabilities
        extend T::Sig
        include Crystalline::MetadataFields


        field :capabilities, Crystalline::Array.new(Models::Components::CapabilityID), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('capabilities'), required: true } }

        sig { params(capabilities: T::Array[Models::Components::CapabilityID]).void }
        def initialize(capabilities:)
          @capabilities = capabilities
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @capabilities == other.capabilities
          true
        end
      end
    end
  end
end
