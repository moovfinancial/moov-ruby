# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class SchedulePaymentMethod
        extend T::Sig
        include Crystalline::MetadataFields


        field :payment_method_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('paymentMethodID'), required: true } }

        field :ach_details, Crystalline::Nilable.new(Models::Components::AchDetails), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('achDetails') } }

        field :card_details, Crystalline::Nilable.new(Models::Components::CardDetails), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('cardDetails') } }

        sig { params(payment_method_id: ::String, ach_details: T.nilable(Models::Components::AchDetails), card_details: T.nilable(Models::Components::CardDetails)).void }
        def initialize(payment_method_id:, ach_details: nil, card_details: nil)
          @payment_method_id = payment_method_id
          @ach_details = ach_details
          @card_details = card_details
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @payment_method_id == other.payment_method_id
          return false unless @ach_details == other.ach_details
          return false unless @card_details == other.card_details
          true
        end
      end
    end
  end
end
