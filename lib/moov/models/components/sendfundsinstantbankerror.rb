# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class SendFundsInstantBankError
        extend T::Sig
        include Crystalline::MetadataFields


        field :estimated_activity, Crystalline::Nilable.new(Models::Components::EstimatedActivityError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('estimatedActivity') } }

        sig { params(estimated_activity: T.nilable(Models::Components::EstimatedActivityError)).void }
        def initialize(estimated_activity: nil)
          @estimated_activity = estimated_activity
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @estimated_activity == other.estimated_activity
          true
        end
      end
    end
  end
end
