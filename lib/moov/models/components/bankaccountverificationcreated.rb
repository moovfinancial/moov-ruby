# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class BankAccountVerificationCreated
        extend T::Sig
        include Crystalline::MetadataFields


        field :verification_method, Models::Components::BankAccountVerificationMethod, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('verificationMethod'), required: true, 'decoder': Utils.enum_from_string(Models::Components::BankAccountVerificationMethod, false) } }

        field :status, Models::Components::BankAccountVerificationStatus, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('status'), required: true, 'decoder': Utils.enum_from_string(Models::Components::BankAccountVerificationStatus, false) } }

        sig { params(verification_method: Models::Components::BankAccountVerificationMethod, status: Models::Components::BankAccountVerificationStatus).void }
        def initialize(verification_method:, status:)
          @verification_method = verification_method
          @status = status
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @verification_method == other.verification_method
          return false unless @status == other.status
          true
        end
      end
    end
  end
end
