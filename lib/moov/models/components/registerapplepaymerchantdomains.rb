# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class RegisterApplePayMerchantDomains
        extend T::Sig
        include Crystalline::MetadataFields

        # A UTF-8 string to display in the Buy button.
        field :display_name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('displayName') } }
        # A unique list of fully-qualified, top-level or sub-domain names where you will accept Apple Pay.
        field :domains, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('domains') } }

        sig { params(display_name: T.nilable(::String), domains: T.nilable(T::Array[::String])).void }
        def initialize(display_name: nil, domains: nil)
          @display_name = display_name
          @domains = domains
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @display_name == other.display_name
          return false unless @domains == other.domains
          true
        end
      end
    end
  end
end
