# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # A structured industry taxonomy entry with category and mapped to a default MCC code.
      class IndustryTaxonomy
        extend T::Sig
        include Crystalline::MetadataFields

        # URL-safe identifier for the industry
        field :industry, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('industry'), required: true } }
        # Display name of the industry
        field :display_name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('displayName'), required: true } }
        # Category slug
        field :category, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('category'), required: true } }
        # Human-readable category label
        field :category_display_name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('categoryDisplayName'), required: true } }
        # Default Merchant Category Code
        field :default_mcc, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('defaultMcc'), required: true } }

        sig { params(industry: ::String, display_name: ::String, category: ::String, category_display_name: ::String, default_mcc: ::String).void }
        def initialize(industry:, display_name:, category:, category_display_name:, default_mcc:)
          @industry = industry
          @display_name = display_name
          @category = category
          @category_display_name = category_display_name
          @default_mcc = default_mcc
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @industry == other.industry
          return false unless @display_name == other.display_name
          return false unless @category == other.category
          return false unless @category_display_name == other.category_display_name
          return false unless @default_mcc == other.default_mcc
          true
        end
      end
    end
  end
end
