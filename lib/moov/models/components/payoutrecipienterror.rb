# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class PayoutRecipientError
        extend T::Sig
        include Crystalline::MetadataFields


        field :email, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('email') } }

        field :phone, Crystalline::Nilable.new(Models::Components::PhoneNumberError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('phone') } }

        sig { params(email: T.nilable(::String), phone: T.nilable(Models::Components::PhoneNumberError)).void }
        def initialize(email: nil, phone: nil)
          @email = email
          @phone = phone
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @email == other.email
          return false unless @phone == other.phone
          true
        end
      end
    end
  end
end
