# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # Wraps a compact-serialized JSON Web Encryption (JWE) token used for secure transmission of sensitive data (e.g., PCI information) through intermediaries. 
      # This token is encrypted using the public key from /end-to-end-keys and wraps an AES key. For details and examples, refer to our 
      # [GitHub repository](https://github.com/moovfinancial/moov-go/blob/main/examples/e2ee/e2ee_test.go).
      class E2EETokenUpdate
        extend T::Sig
        include Crystalline::MetadataFields

        # An [RFC](https://datatracker.ietf.org/doc/html/rfc7516) compact-serialized JSON Web Encryption (JWE) token.
        field :token, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('token') } }

        sig { params(token: T.nilable(::String)).void }
        def initialize(token: nil)
          @token = token
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @token == other.token
          true
        end
      end
    end
  end
end
