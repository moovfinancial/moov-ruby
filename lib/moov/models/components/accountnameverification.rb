# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # The results of submitting cardholder name to a card network for verification.
      class AccountNameVerification
        extend T::Sig
        include Crystalline::MetadataFields


        field :first_name, Crystalline::Nilable.new(Models::Components::CardVerificationResult), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('firstName'), 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, true) } }

        field :last_name, Crystalline::Nilable.new(Models::Components::CardVerificationResult), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('lastName'), 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, true) } }

        field :middle_name, Crystalline::Nilable.new(Models::Components::CardVerificationResult), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('middleName'), 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, true) } }

        field :full_name, Crystalline::Nilable.new(Models::Components::CardVerificationResult), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('fullName'), 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, true) } }

        sig { params(first_name: T.nilable(Models::Components::CardVerificationResult), last_name: T.nilable(Models::Components::CardVerificationResult), middle_name: T.nilable(Models::Components::CardVerificationResult), full_name: T.nilable(Models::Components::CardVerificationResult)).void }
        def initialize(first_name: nil, last_name: nil, middle_name: nil, full_name: nil)
          @first_name = first_name
          @last_name = last_name
          @middle_name = middle_name
          @full_name = full_name
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @first_name == other.first_name
          return false unless @last_name == other.last_name
          return false unless @middle_name == other.middle_name
          return false unless @full_name == other.full_name
          true
        end
      end
    end
  end
end
