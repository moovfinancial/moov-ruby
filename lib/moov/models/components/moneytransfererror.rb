# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class MoneyTransferError
        extend T::Sig
        include Crystalline::MetadataFields


        field :pull_from_card, Crystalline::Nilable.new(Models::Components::MoneyTransferPullFromCardError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('pullFromCard') } }

        field :push_to_card, Crystalline::Nilable.new(Models::Components::MoneyTransferPushToCardError), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('pushToCard') } }

        sig { params(pull_from_card: T.nilable(Models::Components::MoneyTransferPullFromCardError), push_to_card: T.nilable(Models::Components::MoneyTransferPushToCardError)).void }
        def initialize(pull_from_card: nil, push_to_card: nil)
          @pull_from_card = pull_from_card
          @push_to_card = push_to_card
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @pull_from_card == other.pull_from_card
          return false unless @push_to_card == other.push_to_card
          true
        end
      end
    end
  end
end
