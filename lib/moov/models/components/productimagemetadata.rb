# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class ProductImageMetadata
        extend T::Sig
        include Crystalline::MetadataFields

        # Unique identifier for a product or product option image resource.
        field :image_id, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('imageID'), required: true } }
        # The image's public URL.
        field :link, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('link'), required: true } }
        # Alternative text for the image.
        field :alt_text, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('altText') } }

        sig { params(image_id: ::String, link: ::String, alt_text: T.nilable(::String)).void }
        def initialize(image_id:, link:, alt_text: nil)
          @image_id = image_id
          @link = link
          @alt_text = alt_text
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @image_id == other.image_id
          return false unless @link == other.link
          return false unless @alt_text == other.alt_text
          true
        end
      end
    end
  end
end
