# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    
      # The results of submitting cardholder data to a card network for verification.
      class CardVerification
        extend T::Sig
        include Crystalline::MetadataFields


        field :cvv, Models::Components::CardVerificationResult, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('cvv'), required: true, 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, false) } }

        field :address_line1, Models::Components::CardVerificationResult, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('addressLine1'), required: true, 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, false) } }

        field :postal_code, Models::Components::CardVerificationResult, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('postalCode'), required: true, 'decoder': Utils.enum_from_string(Models::Components::CardVerificationResult, false) } }
        # The results of submitting cardholder name to a card network for verification.
        field :account_name, Crystalline::Nilable.new(Models::Components::AccountNameVerification), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('accountName') } }

        sig { params(cvv: Models::Components::CardVerificationResult, address_line1: Models::Components::CardVerificationResult, postal_code: Models::Components::CardVerificationResult, account_name: T.nilable(Models::Components::AccountNameVerification)).void }
        def initialize(cvv:, address_line1:, postal_code:, account_name: nil)
          @cvv = cvv
          @address_line1 = address_line1
          @postal_code = postal_code
          @account_name = account_name
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @cvv == other.cvv
          return false unless @address_line1 == other.address_line1
          return false unless @postal_code == other.postal_code
          return false unless @account_name == other.account_name
          true
        end
      end
    end
  end
end
