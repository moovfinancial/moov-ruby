# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Components
    

      class WireInstitution
        extend T::Sig
        include Crystalline::MetadataFields

        # Name of the financial institution.
        field :name, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('name'), required: true } }

        field :routing_number, ::String, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('routingNumber'), required: true } }

        field :services, Models::Components::WireServices, { 'format_json': { 'letter_case': ::Moov::Utils.field_name('services'), required: true } }

        field :address, Crystalline::Nilable.new(Models::Components::Address), { 'format_json': { 'letter_case': ::Moov::Utils.field_name('address') } }

        sig { params(name: ::String, routing_number: ::String, services: Models::Components::WireServices, address: T.nilable(Models::Components::Address)).void }
        def initialize(name:, routing_number:, services:, address: nil)
          @name = name
          @routing_number = routing_number
          @services = services
          @address = address
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @name == other.name
          return false unless @routing_number == other.routing_number
          return false unless @services == other.services
          return false unless @address == other.address
          true
        end
      end
    end
  end
end
