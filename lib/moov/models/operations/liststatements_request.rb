# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Operations
    

      class ListStatementsRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :account_id, ::String, { 'path_param': { 'field_name': 'accountID', 'style': 'simple', 'explode': false } }
        # Optional date-time which inclusively filters all statements where billing period is on or after this date-time.
        field :billing_period_start_date_time, Crystalline::Nilable.new(::DateTime), { 'query_param': { 'field_name': 'billingPeriodStartDateTime', 'style': 'form', 'explode': false } }
        # Optional date-time which exclusively filters all statements where billing period is before this date-time.
        field :billing_period_end_date_time, Crystalline::Nilable.new(::DateTime), { 'query_param': { 'field_name': 'billingPeriodEndDateTime', 'style': 'form', 'explode': false } }

        field :skip, Crystalline::Nilable.new(::Integer), { 'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': false } }

        field :count, Crystalline::Nilable.new(::Integer), { 'query_param': { 'field_name': 'count', 'style': 'form', 'explode': false } }
        # Specify an API version.
        # 
        # API versioning follows the format `vYYYY.QQ.BB`, where 
        #   - `YYYY` is the year
        #   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
        #   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter. 
        #     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
        # 
        # The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
        field :x_moov_version, Crystalline::Nilable.new(::String), { 'header': { 'field_name': 'X-Moov-Version', 'style': 'simple', 'explode': false } }

        sig { params(account_id: ::String, billing_period_start_date_time: T.nilable(::DateTime), billing_period_end_date_time: T.nilable(::DateTime), skip: T.nilable(::Integer), count: T.nilable(::Integer), x_moov_version: T.nilable(::String)).void }
        def initialize(account_id:, billing_period_start_date_time: nil, billing_period_end_date_time: nil, skip: nil, count: nil, x_moov_version: 'v2024.01.00')
          @account_id = account_id
          @billing_period_start_date_time = billing_period_start_date_time
          @billing_period_end_date_time = billing_period_end_date_time
          @skip = skip
          @count = count
          @x_moov_version = x_moov_version
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @account_id == other.account_id
          return false unless @billing_period_start_date_time == other.billing_period_start_date_time
          return false unless @billing_period_end_date_time == other.billing_period_end_date_time
          return false unless @skip == other.skip
          return false unless @count == other.count
          return false unless @x_moov_version == other.x_moov_version
          true
        end
      end
    end
  end
end
