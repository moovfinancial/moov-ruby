# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Operations
    

      class InitiateRefundRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Prevents duplicate refunds from being created.
        field :x_idempotency_key, ::String, { 'header': { 'field_name': 'x-idempotency-key', 'style': 'simple', 'explode': false } }
        # The merchant's Moov account ID.
        field :account_id, ::String, { 'path_param': { 'field_name': 'accountID', 'style': 'simple', 'explode': false } }
        # Identifier for the transfer.
        field :transfer_id, ::String, { 'path_param': { 'field_name': 'transferID', 'style': 'simple', 'explode': false } }
        # Optional header that indicates whether to return a synchronous response that includes full transfer and rail-specific details or an 
        # asynchronous response indicating the transfer was created (this is the default response if the header is omitted). A timeout will occur after 15 seconds.
        field :x_wait_for, Crystalline::Nilable.new(Models::Components::TransferWaitFor), { 'header': { 'field_name': 'x-wait-for', 'style': 'simple', 'explode': false } }

        field :create_refund, Crystalline::Nilable.new(Models::Components::CreateRefund), { 'request': { 'media_type': 'application/json' } }
        # Specify an API version.
        # 
        # API versioning follows the format `vYYYY.QQ.BB`, where 
        #   - `YYYY` is the year
        #   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
        #   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter. 
        #     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
        # 
        # The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
        field :x_moov_version, Crystalline::Nilable.new(::String), { 'header': { 'field_name': 'X-Moov-Version', 'style': 'simple', 'explode': false } }

        sig { params(x_idempotency_key: ::String, account_id: ::String, transfer_id: ::String, x_wait_for: T.nilable(Models::Components::TransferWaitFor), create_refund: T.nilable(Models::Components::CreateRefund), x_moov_version: T.nilable(::String)).void }
        def initialize(x_idempotency_key:, account_id:, transfer_id:, x_wait_for: nil, create_refund: nil, x_moov_version: 'v2024.01.00')
          @x_idempotency_key = x_idempotency_key
          @account_id = account_id
          @transfer_id = transfer_id
          @x_wait_for = x_wait_for
          @create_refund = create_refund
          @x_moov_version = x_moov_version
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @x_idempotency_key == other.x_idempotency_key
          return false unless @account_id == other.account_id
          return false unless @transfer_id == other.transfer_id
          return false unless @x_wait_for == other.x_wait_for
          return false unless @create_refund == other.create_refund
          return false unless @x_moov_version == other.x_moov_version
          true
        end
      end
    end
  end
end
