# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Operations
    

      class GetEnrichmentAddressRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Partial or complete address to search.
        field :search, ::String, { 'query_param': { 'field_name': 'search', 'style': 'form', 'explode': false } }
        # Maximum number of results to return.
        field :max_results, Crystalline::Nilable.new(::Integer), { 'query_param': { 'field_name': 'maxResults', 'style': 'form', 'explode': false } }
        # Limits results to a list of given cities.
        field :include_cities, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'includeCities', 'style': 'form', 'explode': false } }
        # Limits results to a list of given states.
        field :include_states, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'includeStates', 'style': 'form', 'explode': false } }
        # Limits results to a list of given zipcodes.
        field :include_zipcodes, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'includeZipcodes', 'style': 'form', 'explode': false } }
        # Exclude list of states from results. No `include` pararmeters may be used with this parameter.
        field :exclude_states, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'excludeStates', 'style': 'form', 'explode': false } }
        # Display results with the listed cities at the top.
        field :prefer_cities, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'preferCities', 'style': 'form', 'explode': false } }
        # Display results with the listed states at the top.
        field :prefer_states, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'preferStates', 'style': 'form', 'explode': false } }
        # Display results with the listed zipcodes at the top.
        field :prefer_zipcodes, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'preferZipcodes', 'style': 'form', 'explode': false } }
        # Specifies the percentage of address suggestions that should be preferred and will appear at the top of the results.
        field :prefer_ratio, Crystalline::Nilable.new(::Integer), { 'query_param': { 'field_name': 'preferRatio', 'style': 'form', 'explode': false } }
        #   If omitted or set to `city`, it uses the sender's IP address to determine location, then automatically adds the city and state 
        #   to the preferCities value. This parameter takes precedence over other `include` or `exclude` parameters meaning that if it is 
        #   not set to `none`, you may see addresses from areas you do not wish to see.
        field :prefer_geolocation, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'preferGeolocation', 'style': 'form', 'explode': false } }
        # Useful for narrowing results with `addressLine2` suggestions such as `Apt` (denotes an apartment building with multiple residences).
        field :selected, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'selected', 'style': 'form', 'explode': false } }
        # Include results from alternate data sources. Allowed values are `all` (non-postal addresses), or `postal` (postal addresses only).
        field :source, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'source', 'style': 'form', 'explode': false } }
        # Specify an API version.
        # 
        # API versioning follows the format `vYYYY.QQ.BB`, where 
        #   - `YYYY` is the year
        #   - `QQ` is the two-digit month for the first month of the quarter (e.g., 01, 04, 07, 10)
        #   - `BB` is the build number, starting at `.01`, for subsequent builds in the same quarter. 
        #     - For example, `v2024.01.00` is the initial release of the first quarter of 2024.
        # 
        # The `latest` version represents the most recent development state. It may include breaking changes and should be treated as a beta release.
        field :x_moov_version, Crystalline::Nilable.new(::String), { 'header': { 'field_name': 'X-Moov-Version', 'style': 'simple', 'explode': false } }

        sig { params(search: ::String, max_results: T.nilable(::Integer), include_cities: T.nilable(::String), include_states: T.nilable(::String), include_zipcodes: T.nilable(::String), exclude_states: T.nilable(::String), prefer_cities: T.nilable(::String), prefer_states: T.nilable(::String), prefer_zipcodes: T.nilable(::String), prefer_ratio: T.nilable(::Integer), prefer_geolocation: T.nilable(::String), selected: T.nilable(::String), source: T.nilable(::String), x_moov_version: T.nilable(::String)).void }
        def initialize(search:, max_results: nil, include_cities: nil, include_states: nil, include_zipcodes: nil, exclude_states: nil, prefer_cities: nil, prefer_states: nil, prefer_zipcodes: nil, prefer_ratio: nil, prefer_geolocation: nil, selected: nil, source: nil, x_moov_version: 'v2024.01.00')
          @search = search
          @max_results = max_results
          @include_cities = include_cities
          @include_states = include_states
          @include_zipcodes = include_zipcodes
          @exclude_states = exclude_states
          @prefer_cities = prefer_cities
          @prefer_states = prefer_states
          @prefer_zipcodes = prefer_zipcodes
          @prefer_ratio = prefer_ratio
          @prefer_geolocation = prefer_geolocation
          @selected = selected
          @source = source
          @x_moov_version = x_moov_version
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @search == other.search
          return false unless @max_results == other.max_results
          return false unless @include_cities == other.include_cities
          return false unless @include_states == other.include_states
          return false unless @include_zipcodes == other.include_zipcodes
          return false unless @exclude_states == other.exclude_states
          return false unless @prefer_cities == other.prefer_cities
          return false unless @prefer_states == other.prefer_states
          return false unless @prefer_zipcodes == other.prefer_zipcodes
          return false unless @prefer_ratio == other.prefer_ratio
          return false unless @prefer_geolocation == other.prefer_geolocation
          return false unless @selected == other.selected
          return false unless @source == other.source
          return false unless @x_moov_version == other.x_moov_version
          true
        end
      end
    end
  end
end
