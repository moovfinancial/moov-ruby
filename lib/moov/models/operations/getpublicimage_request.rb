# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module Moov
  module Models
    module Operations
    

      class GetPublicImageRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :public_id, ::String, { 'path_param': { 'field_name': 'publicID', 'style': 'simple', 'explode': false } }

        field :if_none_match, Crystalline::Nilable.new(::String), { 'header': { 'field_name': 'if-none-match', 'style': 'simple', 'explode': false } }
        # Optional parameter to request a resized version of the image (WxH).
        # 
        # If either dimension is 0, the image will be scaled proportionally based on
        # the non-zero dimension. Dimensions are capped at 2048 pixels. A default size
        # of 400x400 will be used if this parameter is omitted.
        field :size, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'size', 'style': 'form', 'explode': false } }

        sig { params(public_id: ::String, if_none_match: T.nilable(::String), size: T.nilable(::String)).void }
        def initialize(public_id:, if_none_match: nil, size: '400x400')
          @public_id = public_id
          @if_none_match = if_none_match
          @size = size
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @public_id == other.public_id
          return false unless @if_none_match == other.if_none_match
          return false unless @size == other.size
          true
        end
      end
    end
  end
end
